1.  Create a bash command for interactive mode and passive mode in com.bat.

2.  printe() in print.c shows the error message. The function can't
    show where exactly the error is.

3.  Need to implement linked list to the process of lexical analysis
    (char **token, t_type *type, int *indent_token) for dynamic memory
    allocation in (token.c). After lexical analysis, Allocate some
    space with fixed allocation in global header file (data.h).

4.  Add a compilation program, which compiles the program into assembly
    program. Steps to do it.
    Step 1:    Understand the difference of working logic of compilation
               in each system.
    Step 2:    Write Algorithms for each system. Try to build common
               functions as much as possible.
    Step 3:    Write the common function which is used among every algorithm.
    Step 4:    Build the compiler for each system by using preprocessor
               directive.

5.  Add functions to edit prompt of syntax and parametres.

6.  Change the process.
    Now the program currently
    1, The data of tokens, type and indentation save in data.h
    2, The data of datatype is save in data.h
    3, Finds for token_eof and parse the tokens from start to where token_eof found.
    4, The data of method is saved in data.h
    5, From the paramtre list in data.h, it compile it

    Change it to
    1, The data of token, type and indentation save in file tokens.txt
    2, The data of datatype is save in tokens.txt
    3, Scan the token, type tokens.txt until TOKEN_EOF is found, and parse it.
    4, Delete the tokens.txt and save the data of method, indentation and needed strings in instructions.txt
    5, From the methods.txt, and compile it